// Package types Code generated by tools. DO NOT EDIT!!!!
package types

import (
	"database/sql/driver"

	"github.com/shrewx/ginx/pkg/enum"
)

func (v City) Int() int {
	return 0
}

func (v City) String() string {
	switch v {
	case CITY__BEIJING:
		return "beijing"
	case CITY__CHENGDU:
		return "chengdu"
	case CITY__SHANGHAI:
		return "shanghai"
	}
	return ""
}

func (v City) Label() string {
	switch v {
	case CITY__BEIJING:
		return "医生"
	case CITY__CHENGDU:
		return "司机"
	case CITY__SHANGHAI:
		return "教师"
	}
	return ""
}

func (v City) Values() []enum.Enum {
	return []enum.Enum{CITY__BEIJING, CITY__CHENGDU, CITY__SHANGHAI}
}

func (v City) Type() string {
	return "github.com/shrewx/toolx/__example__/constant/types.City"
}

func (v City) MarshalText() ([]byte, error) {
	switch v {
	case CITY__BEIJING, CITY__CHENGDU, CITY__SHANGHAI:
		return []byte(v.String()), nil
	default:
		return nil, enum.InvalidTypeError
	}
}

func (v *City) UnmarshalText(text []byte) error {
	switch string(text) {
	case CITY__BEIJING.String():
		*v = CITY__BEIJING
	case CITY__CHENGDU.String():
		*v = CITY__CHENGDU
	case CITY__SHANGHAI.String():
		*v = CITY__SHANGHAI
	default:
		return enum.InvalidTypeError
	}

	return nil
}

func (v *City) Scan(value interface{}) error {
	*v = City(value.(string))
	return nil
}

func (v *City) Value() (driver.Value, error) {
	return string(*v), nil
}
